// Generated from /Users/bytedance/keson/workspace/goctl-intellij/src/main/java/cn/xiaoheiban/antlr4/ApiLexer.g4 by ANTLR 4.9.1
package cn.xiaoheiban.antlr4;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ApiLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SYNTAX=1, INFO=2, MAP=3, STRUCT=4, INTERFACE=5, TYPE=6, ATSERVER=7, ATDOC=8, 
		ATHANDLER=9, SERVICE=10, RETURNS=11, IMPORT=12, AS=13, HTTPMETHOD=14, 
		GET=15, HEAD=16, POST=17, PUT=18, PATCH=19, DELETE=20, CONNECT=21, OPTIONS=22, 
		TRACE=23, GOTYPE=24, BOOL=25, UINT8=26, UINT16=27, UINT32=28, UINT64=29, 
		INT8=30, INT16=31, INT32=32, INT64=33, FLOAT32=34, FLOAT64=35, COMPLEX64=36, 
		COMPLEX128=37, STRING=38, INT=39, UINT=40, UINTPTR=41, BYTE=42, RUNE=43, 
		TIME=44, PATH=45, LPAREN=46, RPAREN=47, LBRACE=48, RBRACE=49, LBRACK=50, 
		RBRACK=51, DOT=52, SMICOLON=53, COMMA=54, STAR=55, BAR=56, ASSIGN=57, 
		COLON=58, SLASH=59, NUMBER=60, HOSTVALUE=61, IDENT=62, WS=63, VALUE=64, 
		RAW_STRING=65, COMMENT=66, ERRCHAR=67;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"SYNTAX", "INFO", "MAP", "STRUCT", "INTERFACE", "TYPE", "ATSERVER", "ATDOC", 
			"ATHANDLER", "SERVICE", "RETURNS", "IMPORT", "AS", "HTTPMETHOD", "GET", 
			"HEAD", "POST", "PUT", "PATCH", "DELETE", "CONNECT", "OPTIONS", "TRACE", 
			"GOTYPE", "BOOL", "UINT8", "UINT16", "UINT32", "UINT64", "INT8", "INT16", 
			"INT32", "INT64", "FLOAT32", "FLOAT64", "COMPLEX64", "COMPLEX128", "STRING", 
			"INT", "UINT", "UINTPTR", "BYTE", "RUNE", "TIME", "PATH", "LPAREN", "RPAREN", 
			"LBRACE", "RBRACE", "LBRACK", "RBRACK", "DOT", "SMICOLON", "COMMA", "STAR", 
			"BAR", "ASSIGN", "COLON", "SLASH", "NUMBER", "HOSTVALUE", "IDENT", "WS", 
			"VALUE", "RAW_STRING", "COMMENT", "COMMENT_FLAG", "RAW_STRING_F", "STRING_F", 
			"DIGIT", "UNDERSCORE", "ALPHA", "HEX_DIGIT", "OCT_DIGIT", "ESC_SEQ", 
			"OCTAL_ESC", "UNICODE_ESC", "ERRCHAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'syntax'", "'info'", "'map'", "'struct'", "'interface'", "'type'", 
			"'@server'", "'@doc'", "'@handler'", "'service'", "'returns'", "'import'", 
			"'as'", null, "'get'", "'head'", "'post'", "'put'", "'patch'", "'delete'", 
			"'connect'", "'options'", "'trace'", null, "'bool'", "'uint8'", "'uint16'", 
			"'uint32'", "'uint64'", "'int8'", "'int16'", "'int32'", "'int64'", "'float32'", 
			"'float64'", "'complex64'", "'complex128'", "'string'", "'int'", "'uint'", 
			"'uintptr'", "'byte'", "'rune'", "'time.Time'", null, "'('", "')'", "'{'", 
			"'}'", "'['", "']'", "'.'", "';'", "','", "'*'", "'-'", "'='", "':'", 
			"'/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "SYNTAX", "INFO", "MAP", "STRUCT", "INTERFACE", "TYPE", "ATSERVER", 
			"ATDOC", "ATHANDLER", "SERVICE", "RETURNS", "IMPORT", "AS", "HTTPMETHOD", 
			"GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "CONNECT", "OPTIONS", 
			"TRACE", "GOTYPE", "BOOL", "UINT8", "UINT16", "UINT32", "UINT64", "INT8", 
			"INT16", "INT32", "INT64", "FLOAT32", "FLOAT64", "COMPLEX64", "COMPLEX128", 
			"STRING", "INT", "UINT", "UINTPTR", "BYTE", "RUNE", "TIME", "PATH", "LPAREN", 
			"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "DOT", "SMICOLON", 
			"COMMA", "STAR", "BAR", "ASSIGN", "COLON", "SLASH", "NUMBER", "HOSTVALUE", 
			"IDENT", "WS", "VALUE", "RAW_STRING", "COMMENT", "ERRCHAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ApiLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ApiLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2E\u027d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3"+
		"\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\5\17\u00ff\n\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u014b\n\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!"+
		"\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&"+
		"\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3.\3.\3.\3.\5.\u01d9\n.\3.\6.\u01dc\n.\r.\16.\u01dd\3.\5.\u01e1"+
		"\n.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\6=\u0200\n=\r=\16"+
		"=\u0201\3>\6>\u0205\n>\r>\16>\u0206\3>\3>\6>\u020b\n>\r>\16>\u020c\3>"+
		"\3>\6>\u0211\n>\r>\16>\u0212\3>\3>\6>\u0217\n>\r>\16>\u0218\3?\3?\5?\u021d"+
		"\n?\3?\3?\3?\3?\7?\u0223\n?\f?\16?\u0226\13?\3@\6@\u0229\n@\r@\16@\u022a"+
		"\3@\3@\3A\3A\7A\u0231\nA\fA\16A\u0234\13A\3A\3A\3B\3B\7B\u023a\nB\fB\16"+
		"B\u023d\13B\3B\3B\3C\3C\7C\u0243\nC\fC\16C\u0246\13C\3C\3C\3D\3D\3D\3"+
		"E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3L\3L\3L\3L\3L\3L\3L\5"+
		"L\u0264\nL\3M\3M\3M\3M\3M\3M\3M\3M\3M\3M\3M\5M\u0271\nM\3N\3N\3N\3N\3"+
		"N\3N\3N\3O\3O\3O\3O\2\2P\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087"+
		"\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095\2\u0097\2\u0099"+
		"\2\u009b\2\u009dE\3\2\r\5\2\13\f\17\17\"\"\5\2\f\f\17\17<<\5\2\f\f\17"+
		"\17bb\3\2\f\f\3\2\62;\4\2C\\c|\5\2\62;CHch\3\2\629\f\2$$))AA^^cdhhppt"+
		"tvvxx\4\2ZZzz\3\2\62\65\2\u02a4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O"+
		"\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2"+
		"\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2"+
		"\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u"+
		"\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u009d\3\2\2\2\3\u009f\3\2\2"+
		"\2\5\u00a6\3\2\2\2\7\u00ab\3\2\2\2\t\u00af\3\2\2\2\13\u00b6\3\2\2\2\r"+
		"\u00c0\3\2\2\2\17\u00c5\3\2\2\2\21\u00cd\3\2\2\2\23\u00d2\3\2\2\2\25\u00db"+
		"\3\2\2\2\27\u00e3\3\2\2\2\31\u00eb\3\2\2\2\33\u00f2\3\2\2\2\35\u00fe\3"+
		"\2\2\2\37\u0100\3\2\2\2!\u0104\3\2\2\2#\u0109\3\2\2\2%\u010e\3\2\2\2\'"+
		"\u0112\3\2\2\2)\u0118\3\2\2\2+\u011f\3\2\2\2-\u0127\3\2\2\2/\u012f\3\2"+
		"\2\2\61\u014a\3\2\2\2\63\u014c\3\2\2\2\65\u0151\3\2\2\2\67\u0157\3\2\2"+
		"\29\u015e\3\2\2\2;\u0165\3\2\2\2=\u016c\3\2\2\2?\u0171\3\2\2\2A\u0177"+
		"\3\2\2\2C\u017d\3\2\2\2E\u0183\3\2\2\2G\u018b\3\2\2\2I\u0193\3\2\2\2K"+
		"\u019d\3\2\2\2M\u01a8\3\2\2\2O\u01af\3\2\2\2Q\u01b3\3\2\2\2S\u01b8\3\2"+
		"\2\2U\u01c0\3\2\2\2W\u01c5\3\2\2\2Y\u01ca\3\2\2\2[\u01e0\3\2\2\2]\u01e2"+
		"\3\2\2\2_\u01e4\3\2\2\2a\u01e6\3\2\2\2c\u01e8\3\2\2\2e\u01ea\3\2\2\2g"+
		"\u01ec\3\2\2\2i\u01ee\3\2\2\2k\u01f0\3\2\2\2m\u01f2\3\2\2\2o\u01f4\3\2"+
		"\2\2q\u01f6\3\2\2\2s\u01f8\3\2\2\2u\u01fa\3\2\2\2w\u01fc\3\2\2\2y\u01ff"+
		"\3\2\2\2{\u0204\3\2\2\2}\u021c\3\2\2\2\177\u0228\3\2\2\2\u0081\u022e\3"+
		"\2\2\2\u0083\u0237\3\2\2\2\u0085\u0240\3\2\2\2\u0087\u0249\3\2\2\2\u0089"+
		"\u024c\3\2\2\2\u008b\u024e\3\2\2\2\u008d\u0250\3\2\2\2\u008f\u0252\3\2"+
		"\2\2\u0091\u0254\3\2\2\2\u0093\u0256\3\2\2\2\u0095\u0258\3\2\2\2\u0097"+
		"\u0263\3\2\2\2\u0099\u0270\3\2\2\2\u009b\u0272\3\2\2\2\u009d\u0279\3\2"+
		"\2\2\u009f\u00a0\7u\2\2\u00a0\u00a1\7{\2\2\u00a1\u00a2\7p\2\2\u00a2\u00a3"+
		"\7v\2\2\u00a3\u00a4\7c\2\2\u00a4\u00a5\7z\2\2\u00a5\4\3\2\2\2\u00a6\u00a7"+
		"\7k\2\2\u00a7\u00a8\7p\2\2\u00a8\u00a9\7h\2\2\u00a9\u00aa\7q\2\2\u00aa"+
		"\6\3\2\2\2\u00ab\u00ac\7o\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7r\2\2\u00ae"+
		"\b\3\2\2\2\u00af\u00b0\7u\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7t\2\2\u00b2"+
		"\u00b3\7w\2\2\u00b3\u00b4\7e\2\2\u00b4\u00b5\7v\2\2\u00b5\n\3\2\2\2\u00b6"+
		"\u00b7\7k\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7v\2\2\u00b9\u00ba\7g\2\2"+
		"\u00ba\u00bb\7t\2\2\u00bb\u00bc\7h\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be"+
		"\7e\2\2\u00be\u00bf\7g\2\2\u00bf\f\3\2\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2"+
		"\7{\2\2\u00c2\u00c3\7r\2\2\u00c3\u00c4\7g\2\2\u00c4\16\3\2\2\2\u00c5\u00c6"+
		"\7B\2\2\u00c6\u00c7\7u\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9\7t\2\2\u00c9"+
		"\u00ca\7x\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7t\2\2\u00cc\20\3\2\2\2\u00cd"+
		"\u00ce\7B\2\2\u00ce\u00cf\7f\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7e\2\2"+
		"\u00d1\22\3\2\2\2\u00d2\u00d3\7B\2\2\u00d3\u00d4\7j\2\2\u00d4\u00d5\7"+
		"c\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7f\2\2\u00d7\u00d8\7n\2\2\u00d8\u00d9"+
		"\7g\2\2\u00d9\u00da\7t\2\2\u00da\24\3\2\2\2\u00db\u00dc\7u\2\2\u00dc\u00dd"+
		"\7g\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7x\2\2\u00df\u00e0\7k\2\2\u00e0"+
		"\u00e1\7e\2\2\u00e1\u00e2\7g\2\2\u00e2\26\3\2\2\2\u00e3\u00e4\7t\2\2\u00e4"+
		"\u00e5\7g\2\2\u00e5\u00e6\7v\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8\7t\2\2"+
		"\u00e8\u00e9\7p\2\2\u00e9\u00ea\7u\2\2\u00ea\30\3\2\2\2\u00eb\u00ec\7"+
		"k\2\2\u00ec\u00ed\7o\2\2\u00ed\u00ee\7r\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0"+
		"\7t\2\2\u00f0\u00f1\7v\2\2\u00f1\32\3\2\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4"+
		"\7u\2\2\u00f4\34\3\2\2\2\u00f5\u00ff\5\37\20\2\u00f6\u00ff\5!\21\2\u00f7"+
		"\u00ff\5#\22\2\u00f8\u00ff\5%\23\2\u00f9\u00ff\5\'\24\2\u00fa\u00ff\5"+
		")\25\2\u00fb\u00ff\5+\26\2\u00fc\u00ff\5-\27\2\u00fd\u00ff\5/\30\2\u00fe"+
		"\u00f5\3\2\2\2\u00fe\u00f6\3\2\2\2\u00fe\u00f7\3\2\2\2\u00fe\u00f8\3\2"+
		"\2\2\u00fe\u00f9\3\2\2\2\u00fe\u00fa\3\2\2\2\u00fe\u00fb\3\2\2\2\u00fe"+
		"\u00fc\3\2\2\2\u00fe\u00fd\3\2\2\2\u00ff\36\3\2\2\2\u0100\u0101\7i\2\2"+
		"\u0101\u0102\7g\2\2\u0102\u0103\7v\2\2\u0103 \3\2\2\2\u0104\u0105\7j\2"+
		"\2\u0105\u0106\7g\2\2\u0106\u0107\7c\2\2\u0107\u0108\7f\2\2\u0108\"\3"+
		"\2\2\2\u0109\u010a\7r\2\2\u010a\u010b\7q\2\2\u010b\u010c\7u\2\2\u010c"+
		"\u010d\7v\2\2\u010d$\3\2\2\2\u010e\u010f\7r\2\2\u010f\u0110\7w\2\2\u0110"+
		"\u0111\7v\2\2\u0111&\3\2\2\2\u0112\u0113\7r\2\2\u0113\u0114\7c\2\2\u0114"+
		"\u0115\7v\2\2\u0115\u0116\7e\2\2\u0116\u0117\7j\2\2\u0117(\3\2\2\2\u0118"+
		"\u0119\7f\2\2\u0119\u011a\7g\2\2\u011a\u011b\7n\2\2\u011b\u011c\7g\2\2"+
		"\u011c\u011d\7v\2\2\u011d\u011e\7g\2\2\u011e*\3\2\2\2\u011f\u0120\7e\2"+
		"\2\u0120\u0121\7q\2\2\u0121\u0122\7p\2\2\u0122\u0123\7p\2\2\u0123\u0124"+
		"\7g\2\2\u0124\u0125\7e\2\2\u0125\u0126\7v\2\2\u0126,\3\2\2\2\u0127\u0128"+
		"\7q\2\2\u0128\u0129\7r\2\2\u0129\u012a\7v\2\2\u012a\u012b\7k\2\2\u012b"+
		"\u012c\7q\2\2\u012c\u012d\7p\2\2\u012d\u012e\7u\2\2\u012e.\3\2\2\2\u012f"+
		"\u0130\7v\2\2\u0130\u0131\7t\2\2\u0131\u0132\7c\2\2\u0132\u0133\7e\2\2"+
		"\u0133\u0134\7g\2\2\u0134\60\3\2\2\2\u0135\u014b\5\63\32\2\u0136\u014b"+
		"\5\65\33\2\u0137\u014b\5\67\34\2\u0138\u014b\59\35\2\u0139\u014b\5;\36"+
		"\2\u013a\u014b\5=\37\2\u013b\u014b\5? \2\u013c\u014b\5A!\2\u013d\u014b"+
		"\5C\"\2\u013e\u014b\5E#\2\u013f\u014b\5E#\2\u0140\u014b\5G$\2\u0141\u014b"+
		"\5I%\2\u0142\u014b\5K&\2\u0143\u014b\5M\'\2\u0144\u014b\5O(\2\u0145\u014b"+
		"\5Q)\2\u0146\u014b\5S*\2\u0147\u014b\5U+\2\u0148\u014b\5W,\2\u0149\u014b"+
		"\5Y-\2\u014a\u0135\3\2\2\2\u014a\u0136\3\2\2\2\u014a\u0137\3\2\2\2\u014a"+
		"\u0138\3\2\2\2\u014a\u0139\3\2\2\2\u014a\u013a\3\2\2\2\u014a\u013b\3\2"+
		"\2\2\u014a\u013c\3\2\2\2\u014a\u013d\3\2\2\2\u014a\u013e\3\2\2\2\u014a"+
		"\u013f\3\2\2\2\u014a\u0140\3\2\2\2\u014a\u0141\3\2\2\2\u014a\u0142\3\2"+
		"\2\2\u014a\u0143\3\2\2\2\u014a\u0144\3\2\2\2\u014a\u0145\3\2\2\2\u014a"+
		"\u0146\3\2\2\2\u014a\u0147\3\2\2\2\u014a\u0148\3\2\2\2\u014a\u0149\3\2"+
		"\2\2\u014b\62\3\2\2\2\u014c\u014d\7d\2\2\u014d\u014e\7q\2\2\u014e\u014f"+
		"\7q\2\2\u014f\u0150\7n\2\2\u0150\64\3\2\2\2\u0151\u0152\7w\2\2\u0152\u0153"+
		"\7k\2\2\u0153\u0154\7p\2\2\u0154\u0155\7v\2\2\u0155\u0156\7:\2\2\u0156"+
		"\66\3\2\2\2\u0157\u0158\7w\2\2\u0158\u0159\7k\2\2\u0159\u015a\7p\2\2\u015a"+
		"\u015b\7v\2\2\u015b\u015c\7\63\2\2\u015c\u015d\78\2\2\u015d8\3\2\2\2\u015e"+
		"\u015f\7w\2\2\u015f\u0160\7k\2\2\u0160\u0161\7p\2\2\u0161\u0162\7v\2\2"+
		"\u0162\u0163\7\65\2\2\u0163\u0164\7\64\2\2\u0164:\3\2\2\2\u0165\u0166"+
		"\7w\2\2\u0166\u0167\7k\2\2\u0167\u0168\7p\2\2\u0168\u0169\7v\2\2\u0169"+
		"\u016a\78\2\2\u016a\u016b\7\66\2\2\u016b<\3\2\2\2\u016c\u016d\7k\2\2\u016d"+
		"\u016e\7p\2\2\u016e\u016f\7v\2\2\u016f\u0170\7:\2\2\u0170>\3\2\2\2\u0171"+
		"\u0172\7k\2\2\u0172\u0173\7p\2\2\u0173\u0174\7v\2\2\u0174\u0175\7\63\2"+
		"\2\u0175\u0176\78\2\2\u0176@\3\2\2\2\u0177\u0178\7k\2\2\u0178\u0179\7"+
		"p\2\2\u0179\u017a\7v\2\2\u017a\u017b\7\65\2\2\u017b\u017c\7\64\2\2\u017c"+
		"B\3\2\2\2\u017d\u017e\7k\2\2\u017e\u017f\7p\2\2\u017f\u0180\7v\2\2\u0180"+
		"\u0181\78\2\2\u0181\u0182\7\66\2\2\u0182D\3\2\2\2\u0183\u0184\7h\2\2\u0184"+
		"\u0185\7n\2\2\u0185\u0186\7q\2\2\u0186\u0187\7c\2\2\u0187\u0188\7v\2\2"+
		"\u0188\u0189\7\65\2\2\u0189\u018a\7\64\2\2\u018aF\3\2\2\2\u018b\u018c"+
		"\7h\2\2\u018c\u018d\7n\2\2\u018d\u018e\7q\2\2\u018e\u018f\7c\2\2\u018f"+
		"\u0190\7v\2\2\u0190\u0191\78\2\2\u0191\u0192\7\66\2\2\u0192H\3\2\2\2\u0193"+
		"\u0194\7e\2\2\u0194\u0195\7q\2\2\u0195\u0196\7o\2\2\u0196\u0197\7r\2\2"+
		"\u0197\u0198\7n\2\2\u0198\u0199\7g\2\2\u0199\u019a\7z\2\2\u019a\u019b"+
		"\78\2\2\u019b\u019c\7\66\2\2\u019cJ\3\2\2\2\u019d\u019e\7e\2\2\u019e\u019f"+
		"\7q\2\2\u019f\u01a0\7o\2\2\u01a0\u01a1\7r\2\2\u01a1\u01a2\7n\2\2\u01a2"+
		"\u01a3\7g\2\2\u01a3\u01a4\7z\2\2\u01a4\u01a5\7\63\2\2\u01a5\u01a6\7\64"+
		"\2\2\u01a6\u01a7\7:\2\2\u01a7L\3\2\2\2\u01a8\u01a9\7u\2\2\u01a9\u01aa"+
		"\7v\2\2\u01aa\u01ab\7t\2\2\u01ab\u01ac\7k\2\2\u01ac\u01ad\7p\2\2\u01ad"+
		"\u01ae\7i\2\2\u01aeN\3\2\2\2\u01af\u01b0\7k\2\2\u01b0\u01b1\7p\2\2\u01b1"+
		"\u01b2\7v\2\2\u01b2P\3\2\2\2\u01b3\u01b4\7w\2\2\u01b4\u01b5\7k\2\2\u01b5"+
		"\u01b6\7p\2\2\u01b6\u01b7\7v\2\2\u01b7R\3\2\2\2\u01b8\u01b9\7w\2\2\u01b9"+
		"\u01ba\7k\2\2\u01ba\u01bb\7p\2\2\u01bb\u01bc\7v\2\2\u01bc\u01bd\7r\2\2"+
		"\u01bd\u01be\7v\2\2\u01be\u01bf\7t\2\2\u01bfT\3\2\2\2\u01c0\u01c1\7d\2"+
		"\2\u01c1\u01c2\7{\2\2\u01c2\u01c3\7v\2\2\u01c3\u01c4\7g\2\2\u01c4V\3\2"+
		"\2\2\u01c5\u01c6\7t\2\2\u01c6\u01c7\7w\2\2\u01c7\u01c8\7p\2\2\u01c8\u01c9"+
		"\7g\2\2\u01c9X\3\2\2\2\u01ca\u01cb\7v\2\2\u01cb\u01cc\7k\2\2\u01cc\u01cd"+
		"\7o\2\2\u01cd\u01ce\7g\2\2\u01ce\u01cf\7\60\2\2\u01cf\u01d0\7V\2\2\u01d0"+
		"\u01d1\7k\2\2\u01d1\u01d2\7o\2\2\u01d2\u01d3\7g\2\2\u01d3Z\3\2\2\2\u01d4"+
		"\u01d9\7\61\2\2\u01d5\u01d6\7\61\2\2\u01d6\u01d9\7<\2\2\u01d7\u01d9\7"+
		"/\2\2\u01d8\u01d4\3\2\2\2\u01d8\u01d5\3\2\2\2\u01d8\u01d7\3\2\2\2\u01d9"+
		"\u01da\3\2\2\2\u01da\u01dc\5}?\2\u01db\u01d8\3\2\2\2\u01dc\u01dd\3\2\2"+
		"\2\u01dd\u01db\3\2\2\2\u01dd\u01de\3\2\2\2\u01de\u01e1\3\2\2\2\u01df\u01e1"+
		"\7\61\2\2\u01e0\u01db\3\2\2\2\u01e0\u01df\3\2\2\2\u01e1\\\3\2\2\2\u01e2"+
		"\u01e3\7*\2\2\u01e3^\3\2\2\2\u01e4\u01e5\7+\2\2\u01e5`\3\2\2\2\u01e6\u01e7"+
		"\7}\2\2\u01e7b\3\2\2\2\u01e8\u01e9\7\177\2\2\u01e9d\3\2\2\2\u01ea\u01eb"+
		"\7]\2\2\u01ebf\3\2\2\2\u01ec\u01ed\7_\2\2\u01edh\3\2\2\2\u01ee\u01ef\7"+
		"\60\2\2\u01efj\3\2\2\2\u01f0\u01f1\7=\2\2\u01f1l\3\2\2\2\u01f2\u01f3\7"+
		".\2\2\u01f3n\3\2\2\2\u01f4\u01f5\7,\2\2\u01f5p\3\2\2\2\u01f6\u01f7\7/"+
		"\2\2\u01f7r\3\2\2\2\u01f8\u01f9\7?\2\2\u01f9t\3\2\2\2\u01fa\u01fb\7<\2"+
		"\2\u01fbv\3\2\2\2\u01fc\u01fd\7\61\2\2\u01fdx\3\2\2\2\u01fe\u0200\5\u008d"+
		"G\2\u01ff\u01fe\3\2\2\2\u0200\u0201\3\2\2\2\u0201\u01ff\3\2\2\2\u0201"+
		"\u0202\3\2\2\2\u0202z\3\2\2\2\u0203\u0205\5\u008dG\2\u0204\u0203\3\2\2"+
		"\2\u0205\u0206\3\2\2\2\u0206\u0204\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u0208"+
		"\3\2\2\2\u0208\u020a\7\60\2\2\u0209\u020b\5\u008dG\2\u020a\u0209\3\2\2"+
		"\2\u020b\u020c\3\2\2\2\u020c\u020a\3\2\2\2\u020c\u020d\3\2\2\2\u020d\u020e"+
		"\3\2\2\2\u020e\u0210\7\60\2\2\u020f\u0211\5\u008dG\2\u0210\u020f\3\2\2"+
		"\2\u0211\u0212\3\2\2\2\u0212\u0210\3\2\2\2\u0212\u0213\3\2\2\2\u0213\u0214"+
		"\3\2\2\2\u0214\u0216\7\60\2\2\u0215\u0217\5\u008dG\2\u0216\u0215\3\2\2"+
		"\2\u0217\u0218\3\2\2\2\u0218\u0216\3\2\2\2\u0218\u0219\3\2\2\2\u0219|"+
		"\3\2\2\2\u021a\u021d\5\u0091I\2\u021b\u021d\5\u008fH\2\u021c\u021a\3\2"+
		"\2\2\u021c\u021b\3\2\2\2\u021d\u0224\3\2\2\2\u021e\u0223\5\u0091I\2\u021f"+
		"\u0223\5\u008dG\2\u0220\u0223\5\u008fH\2\u0221\u0223\7/\2\2\u0222\u021e"+
		"\3\2\2\2\u0222\u021f\3\2\2\2\u0222\u0220\3\2\2\2\u0222\u0221\3\2\2\2\u0223"+
		"\u0226\3\2\2\2\u0224\u0222\3\2\2\2\u0224\u0225\3\2\2\2\u0225~\3\2\2\2"+
		"\u0226\u0224\3\2\2\2\u0227\u0229\t\2\2\2\u0228\u0227\3\2\2\2\u0229\u022a"+
		"\3\2\2\2\u022a\u0228\3\2\2\2\u022a\u022b\3\2\2\2\u022b\u022c\3\2\2\2\u022c"+
		"\u022d\b@\2\2\u022d\u0080\3\2\2\2\u022e\u0232\5\u008bF\2\u022f\u0231\n"+
		"\3\2\2\u0230\u022f\3\2\2\2\u0231\u0234\3\2\2\2\u0232\u0230\3\2\2\2\u0232"+
		"\u0233\3\2\2\2\u0233\u0235\3\2\2\2\u0234\u0232\3\2\2\2\u0235\u0236\5\u008b"+
		"F\2\u0236\u0082\3\2\2\2\u0237\u023b\5\u0089E\2\u0238\u023a\n\4\2\2\u0239"+
		"\u0238\3\2\2\2\u023a\u023d\3\2\2\2\u023b\u0239\3\2\2\2\u023b\u023c\3\2"+
		"\2\2\u023c\u023e\3\2\2\2\u023d\u023b\3\2\2\2\u023e\u023f\5\u0089E\2\u023f"+
		"\u0084\3\2\2\2\u0240\u0244\5\u0087D\2\u0241\u0243\n\5\2\2\u0242\u0241"+
		"\3\2\2\2\u0243\u0246\3\2\2\2\u0244\u0242\3\2\2\2\u0244\u0245\3\2\2\2\u0245"+
		"\u0247\3\2\2\2\u0246\u0244\3\2\2\2\u0247\u0248\bC\2\2\u0248\u0086\3\2"+
		"\2\2\u0249\u024a\7\61\2\2\u024a\u024b\7\61\2\2\u024b\u0088\3\2\2\2\u024c"+
		"\u024d\7b\2\2\u024d\u008a\3\2\2\2\u024e\u024f\7$\2\2\u024f\u008c\3\2\2"+
		"\2\u0250\u0251\t\6\2\2\u0251\u008e\3\2\2\2\u0252\u0253\7a\2\2\u0253\u0090"+
		"\3\2\2\2\u0254\u0255\t\7\2\2\u0255\u0092\3\2\2\2\u0256\u0257\t\b\2\2\u0257"+
		"\u0094\3\2\2\2\u0258\u0259\t\t\2\2\u0259\u0096\3\2\2\2\u025a\u025b\7^"+
		"\2\2\u025b\u0264\t\n\2\2\u025c\u025d\7^\2\2\u025d\u025e\t\13\2\2\u025e"+
		"\u025f\5\u0093J\2\u025f\u0260\5\u0093J\2\u0260\u0264\3\2\2\2\u0261\u0264"+
		"\5\u009bN\2\u0262\u0264\5\u0099M\2\u0263\u025a\3\2\2\2\u0263\u025c\3\2"+
		"\2\2\u0263\u0261\3\2\2\2\u0263\u0262\3\2\2\2\u0264\u0098\3\2\2\2\u0265"+
		"\u0266\7^\2\2\u0266\u0267\t\f\2\2\u0267\u0268\5\u0095K\2\u0268\u0269\5"+
		"\u0095K\2\u0269\u0271\3\2\2\2\u026a\u026b\7^\2\2\u026b\u026c\5\u0095K"+
		"\2\u026c\u026d\5\u0095K\2\u026d\u0271\3\2\2\2\u026e\u026f\7^\2\2\u026f"+
		"\u0271\5\u0095K\2\u0270\u0265\3\2\2\2\u0270\u026a\3\2\2\2\u0270\u026e"+
		"\3\2\2\2\u0271\u009a\3\2\2\2\u0272\u0273\7^\2\2\u0273\u0274\7w\2\2\u0274"+
		"\u0275\5\u0093J\2\u0275\u0276\5\u0093J\2\u0276\u0277\5\u0093J\2\u0277"+
		"\u0278\5\u0093J\2\u0278\u009c\3\2\2\2\u0279\u027a\13\2\2\2\u027a\u027b"+
		"\3\2\2\2\u027b\u027c\bO\2\2\u027c\u009e\3\2\2\2\26\2\u00fe\u014a\u01d8"+
		"\u01dd\u01e0\u0201\u0206\u020c\u0212\u0218\u021c\u0222\u0224\u022a\u0232"+
		"\u023b\u0244\u0263\u0270\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}